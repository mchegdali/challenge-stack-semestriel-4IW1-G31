{% extends 'base.html.twig' %}

{% block title %}Plumbill
{% endblock %}

{% block body %}
    <header class="flex justify-between flex-row">
        <h1 class="font-bold text-3xl">Liste des factures</h1>
        <a href="{{ path('invoice_new') }}"
           class="font-semibold py-2 px-4 rounded bg-primary text-white hover:bg-blue-dark">
            Créer une facture
        </a>
    </header>
    <section class="bg-white dark:bg-blue-darker flex gap-4 flex-wrap w-full p-4 shadow-md rounded-xl">
        <details>
            <summary class="font-bold cursor-pointer">Filtres</summary>
            {{ form_start(searchForm, {'method': 'POST', 'attr': {'class': 'animate-in fade-in duration-300'} }) }}
            {{ form_row(searchForm.status) }}
            {{ form_rest(searchForm) }}
            <button type="submit" id="invoice_search_submit"
                    class="rounded px-2 py-1 bg-primary font-bold text-white disabled:bg-blue-lightest animate-in fade-in duration-300">
                Filtrer
            </button>
            {{ form_end(searchForm) }}
        </details>
    </section>
    <section>
        {% if invoices|length == 0 %}
            <p class="mt-2">Aucune facture trouvée</p>
        {% endif %}
        <div class="w-full gap-2 grid grid-cols-1 md:grid-cols-2 md:gap-2 xl:grid-cols-4 xl:gap-3 2xl:grid-cols-4 2xl:gap-4">
            {% for invoice in invoices %}
                <twig:Invoice:InvoiceListItem :invoice="invoice"/>
            {% endfor %}
        </div>
    </section>
    <div class="navigation flex justify-center mb-8">
        {{ knp_pagination_render(invoices, 'components/TailwindPagination.html.twig') }}
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        const formEl = document.querySelector("form");
        const submitBtn = document.getElementById("invoice_search_submit");
        submitBtn.disabled = isFormEmpty();

        formEl.addEventListener("input", function (e) {
            submitBtn.disabled = isFormEmpty();
        });

        function isFormEmpty() {
            let isEmpty = true;
            const fd = new FormData(formEl);
            for (const [key, value] of fd.entries()) {
                if (key.includes("_token")) continue;

                if (value.trim() !== '') {
                    isEmpty = false;
                    break;
                }
            }

            return isEmpty;
        }
    </script>
{% endblock %}