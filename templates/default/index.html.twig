{% extends 'base.html.twig' %}

{% block title %}Plumbill
{% endblock %}

{% block body %}
    <header class="mb-2 p-1">
        <h1 class="font-bold text-3xl">{{ app.user.company.name|default('Plumbill') }}</h1>
    </header>

    <section class="bg-white dark:bg-blue-darker flex gap-4 flex-wrap w-full px-4 py-6 shadow-md rounded-xl">
        <a href="{{ path('invoice_new') }}"><h2>Créer une facture</h2></a>
        <h2>Factures ({{ invoiceCount }})</h2>
        <h2>Non échues ({{ unpaidInvoicesCount }})</h2>
        <h2>En retard (- de 30 jours) ({{ invoiceCountLate1 }})</h2>
        <h2>En retard (+ de 30 jours) ({{ invoiceCountLate2 }})</h2>
        <div class="w-full flex justify-center items-center">
            <div class="w-1/2">
                <canvas id="myChartRound" class="w-full h-full"></canvas>
            </div>
        </div>
    </section>

    <section class="bg-white dark:bg-blue-darker flex gap-4 flex-wrap w-full px-4 py-6 shadow-md rounded-xl">
        <h2>Ventes ({{ invoiceCount }})</h2>
        <h2>12 derniers mois</h2>
        <h2>{{ paymentLast12Months }} €</h2>
        <h2>Ce mois</h2>
        <h2>{{ paymentThisMonth }} €</h2>
        <h2>Total argent entrant</h2>
        <h2>{{ amountReceivedAllTimes }} €</h2>
        <h2>Total factures</h2>
        <h2>{{ totalInvoices }} €</h2>
        <h2>Somme d'argent en attente</h2>
        <h2>{{ amountToReceive }} €</h2>
        <div class="w-full flex justify-center items-center">
            <div class="w-1/2">
                <canvas id="myChartBar" class="w-full h-full"></canvas>
                {# TODO #}
            </div>
        </div>
    </section>
{% endblock %}


{% block javascripts %}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const ctx = document.getElementById('myChartRound').getContext('2d');
            const myChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: ['Non échues', 'Non payées', 'Payées'],
                    datasets: [{
                        label: 'Parts de factures',
                        data: [
                            {{ unpaidInvoicesCount }},
                            {{ invoiceCountLate1 }},
                            {{ invoiceCountLate2 }}
                        ],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
            });
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const labels = {{ json12Months | raw }};

            // Configuration des données
            const data = {
                labels: labels,
                datasets: [{
                    label: 'Mes paiements reçus chaque mois sur les 12 derniers mois',
                    data: {{ paymentsDataJsonPayment | raw }},
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(255, 159, 64, 0.2)',
                        'rgba(255, 205, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(201, 203, 207, 0.2)'
                    ],
                    borderColor: [
                        'rgb(255, 99, 132)',
                        'rgb(255, 159, 64)',
                        'rgb(255, 205, 86)',
                        'rgb(75, 192, 192)',
                        'rgb(54, 162, 235)',
                        'rgb(153, 102, 255)',
                        'rgb(201, 203, 207)'
                    ],
                    borderWidth: 1
                }]
            };

            // Configuration du graphique
            const config = {
                type: 'bar',
                data: data,
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                },
            };

            // Initialisation du graphique
            const myChart = new Chart(
                document.getElementById('myChartBar'),
                config
            );
        });
    </script>
{% endblock %}
